name: CI

on:
    - pull_request
    - push

jobs:
    tests:
        name: "PHP ${{ matrix.php }} + Composer ${{ matrix.composer-flags }} + Symfony@${{ matrix.symfony || '*' }}"
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                include:
                    -   php: '5.5'
                        composer-flags: '--prefer-lowest'
                        calculate-code-coverage: 'yes'
                    -   php: '5.5'
                        symfony: '^3.0'
                    -   php: '5.6'
                    -   php: '7.0'
                    -   php: '7.1'
                        symfony: '^4.0'
                    -   php: '7.2'
                        symfony: '^5.0'
                    -   php: '7.3'
                    -   php: '7.4'
                    -   php: '8.0'
                        symfony: '^6.0'
                        calculate-code-coverage: 'yes'

        steps:
            -   name: Checkout source
                uses: actions/checkout@v3

            -   name: Get code coverage driver
                uses: actions/github-script@v3.1
                id: code-coverage-driver
                with:
                    script: 'return "${{ matrix.calculate-code-coverage }}" == "yes" ? "pcov" : "none"'
                    result-encoding: string

            -   name: Get symfony flex version
                uses: actions/github-script@v3.1
                id: flex-version
                with:
                    script: 'return "${{ matrix.php }}" == "7.0" ? "~1.6.0" : "^1.11"'
                    result-encoding: string

            -   name: PHP setup
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    ini-values: zend.assertions=1, error_reporting=-1, display_errors=On, log_errors_max_len=0
                    coverage: ${{ steps.code-coverage-driver.outputs.result }}

            -   name: Downgrade composer for old Symfony Flex
                if: steps.flex-version.outputs.result == '~1.6.0'
                run: composer self-update --1

            -   name: "Disallow Symfony Flex to run as a Composer plugin (global)"
                if: startsWith(matrix.php, '5') == false && steps.flex-version.outputs.result != '~1.6.0'
                run: composer -g config allow-plugins.symfony/flex false

            -   name: "Install Symfony Flex"
                if: startsWith(matrix.php, '5') == false
                run: composer global require -o --no-interaction symfony/flex:${{ steps.flex-version.outputs.result }} --no-plugins

            -   name: Require Symfony version
                if: matrix.symfony
                run: composer config extra.symfony.require ${{ matrix.symfony }}

            -   name: Update composer dependencies
                if: matrix.php != '8.2'
                run: composer update -o --no-interaction --no-progress ${{ matrix.composer-flags }}

            -   name: "Update composer dependencies (PHP 8.2, ignore platform)"
                if: matrix.php == '8.2'
                run: composer update -o --no-interaction --no-progress ${{ matrix.composer-flags }} --ignore-platform-req=php+

            -   name: Run test suite
                run: ./vendor/bin/phpunit -v

            -   name: Upload coverage results to Coveralls
                if: matrix.calculate-code-coverage == 'yes'
                env:
                    COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    COVERALLS_PARALLEL: true
                    COVERALLS_FLAG_NAME: "PHP ${{ matrix.php }} + Symfony@${{ matrix.symfony || '*' }}"
                run: bin/php-coveralls -v --exclude-no-stmt

    coveralls-finish:
        needs: tests
        runs-on: ubuntu-latest
        steps:
            -   name: Notify Coveralls when build is finished
                run: |
                    curl -k https://coveralls.io/webhook?repo_token=${{ secrets.GITHUB_TOKEN }} \
                        -d "repo_name=$GITHUB_REPOSITORY&payload[build_num]=$GITHUB_RUN_ID&payload[status]=done"

    build-phar:
        needs: tests
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.0
                    coverage: none

            -   name: Build PHAR
                run: |
                    curl -LSs https://box-project.github.io/box2/installer.php | php
                    composer config platform.php 2> /dev/null || composer config platform.php 5.5.0
                    composer update --no-dev --no-interaction --optimize-autoloader --no-interaction --no-progress
                    php -d phar.readonly=false box.phar build
                    ./build/artifacts/php-coveralls.phar --version
